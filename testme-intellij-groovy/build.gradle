plugins {
    id 'org.jetbrains.intellij.platform.module'
    id 'jacoco'
}

repositories {
    mavenCentral()
    intellijPlatform {
        defaultRepositories()
        jetbrainsRuntime()
        snapshots()
    }
}

dependencies {
    intellijPlatform {
        create(providers.gradleProperty("ideaType"), providers.gradleProperty("ideaVersion"), useInstaller)
        bundledPlugins(['com.intellij.java', 'org.intellij.groovy'])
        instrumentationTools()
    }
    implementation(project(':testme-intellij-common')){
        exclude group:'com.jetbrains', module: 'ideaIC'
        exclude group:'org.jetbrains.plugins', module: 'junit'
        exclude group:'org.jetbrains.plugins', module: 'properties'
        exclude group:'org.jetbrains.plugins', module: 'Groovy'
    }
}
test {
    afterTest { desc, result ->
        println "Executing test [${desc.className}].${desc.name} with result: ${result.resultType}"
    }
    useJUnitPlatform()
    jacoco {
        includeNoLocationClasses = true
        excludes = ["jdk.internal.*"]
    }
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    classDirectories.setFrom(instrumentCode)
    reports {
        xml.required = true
    }
    outputs.upToDateWhen { false } // Always generate report
}