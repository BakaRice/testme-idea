
plugins {
//    id "org.jetbrains.intellij" version "1.17.1"
    id 'jacoco'
    id 'org.unbroken-dome.test-sets' version '4.0.0'
    id "io.freefair.lombok" version "8.3"
    id("org.jetbrains.intellij.platform") version "2.0.1"
    id("org.jetbrains.intellij.platform.migration") version "2.0.1"
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'org.jetbrains.intellij.platform'

def isRunInCI=Boolean.valueOf(System.getenv('CI'))
def spockVersion = "1.0-groovy-2.4"

repositories {
    mavenCentral()
    intellijPlatform {
        defaultRepositories()
    }
}

allprojects {
    sourceCompatibility = jvmTargetVersion
    targetCompatibility = jvmTargetVersion

    jacoco {
        toolVersion = "0.8.11"
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        if (!javaHome) {
            println "javaHome var not set. setting java home from JAVA_HOME env var"
            javaHome = System.getenv().JAVA_HOME
        }
        println "JAVA_HOME=$javaHome"
    }

}

subprojects{
    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'idea'
    apply plugin: 'jacoco'
    apply plugin: "io.freefair.lombok"
    dependencies {
        testImplementation("org.spockframework:spock-core:$spockVersion"){
        }
    }
}

def enabledPlugins = ['java','junit','properties','Groovy',]
enabledPlugins += ('org.intellij.scala:' + scalaPluginVersion)

//intellij {
//    pluginName = 'TestMe'
//    instrumentCode = true
//    version = '2023.2'
//    type = 'IC'
//    downloadSources = !isRunInCI
//    sameSinceUntilBuild = false
//    updateSinceUntilBuild = false
//    plugins = enabledPlugins
//}

intellijPlatform {
    pluginConfiguration {
        name = 'TestMe'
    }
}


publishPlugin {
    token = System.getenv("ORG_GRADLE_PROJECT_intellijPublishToken")
    channels = [ideaPublishChannel]
}
idea {
    project {
        jdkName         = jvmTargetVersion
        languageLevel   = jvmTargetVersion
        vcs = 'Git'
    }
}

dependencies {
    intellijPlatform {
        intellijIdeaCommunity '2024.2.0.1'

        bundledPlugin 'com.intellij.java'

        pluginVerifier()
        zipSigner()
        instrumentationTools()

    }

    testImplementation 'junit:junit:4.13.2'
    implementation(project(':testme-intellij-common')){
        exclude group:'com.jetbrains', module: 'ideaIC'
        exclude group:'org.jetbrains.plugins', module: 'junit'
        exclude group:'org.jetbrains.plugins', module: 'properties'
        exclude group:'org.jetbrains.plugins', module: 'Groovy'
    }
    implementation(project(':testme-intellij-groovy')){
        exclude group:'com.jetbrains', module: 'ideaIC'
        exclude group:'org.jetbrains.plugins', module: 'junit'
        exclude group:'org.jetbrains.plugins', module: 'properties'
        exclude group:'org.jetbrains.plugins', module: 'Groovy'
    }
    implementation(project(':testme-intellij-scala')){
        exclude group:'com.jetbrains', module: 'ideaIC'
        exclude group:'org.jetbrains.plugins', module: 'junit'
        exclude group:'org.jetbrains.plugins', module: 'properties'
        exclude group:'org.jetbrains.plugins', module: 'Groovy'
        exclude group:'org.jetbrains.plugins', module: 'Scala'
    }

    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
}

