buildscript {
  repositories {
    maven { url 'http://dl.bintray.com/jetbrains/intellij-plugin-service' }
  }
}

plugins {
    id "org.jetbrains.intellij" version "0.2.7"
    id 'jacoco'
    id 'org.unbroken-dome.test-sets' version '1.2.0'
//    id 'com.github.kt3k.coveralls' version '2.6.3'
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'application'
apply plugin: 'idea'
apply plugin: 'org.jetbrains.intellij'

jacoco {
    toolVersion = "0.7.6.201602180812"
}

repositories {
    mavenCentral()
}

sourceCompatibility = jvmTargetVersion
targetCompatibility = jvmTargetVersion

testSets {
    integrationTest
}
check.dependsOn integrationTest
integrationTest.mustRunAfter test

tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
}
test {
    afterTest { desc, result ->
        println "Executing test [${desc.className}].${desc.name} with result: ${result.resultType}"
    }
    testLogging {
        exceptionFormat = 'full'
        events "failed"
        showStandardStreams = true
    }
}
integrationTest {
    afterTest { desc, result ->
        println "Executing test [${desc.className}].${desc.name} with result: ${result.resultType}"
    }
}

tasks.build.dependsOn(jacocoTestReport)

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    if (!javaHome) {
        javaHome =  System.env.JAVA_HOME
    }
    options.bootClasspath = "$javaHome/jre/lib/rt.jar"
}
def mandatoryPlugins = ['junit','properties']
intellij {
    version ideaVersion
    type ideaType
    pluginName 'TestMe'
    downloadSources Boolean.valueOf(ideaDownloadSources)
    sameSinceUntilBuild false
    updateSinceUntilBuild false
    plugins = Boolean.valueOf(System.getProperty('enableIdeaGroovyPlugin','true')) ? (mandatoryPlugins + 'Groovy') : mandatoryPlugins

    publish {
        username ideaPublishUsername
        password ideaPublishPassword
        channel ideaPublishChannel
    }
}
idea {
    project {
        jdkName         = jvmTargetVersion
        languageLevel   = jvmTargetVersion
        vcs = 'Git'
    }
}

//test {
//    testLogging {
//        exceptionFormat = 'full'
//    }
//    systemProperties = [
//            enableIdeaGroovyPlugin: System.getProperty("enableIdeaGroovyPlugin","true")
//    ]
//}
//check{
//    systemProperties = [
//            enableIdeaGroovyPlugin: System.getProperty("enableIdeaGroovyPlugin","true")
//    ]
//}
tasks.withType(Test) { systemProperty 'enableIdeaGroovyPlugin', System.getProperty("enableIdeaGroovyPlugin","true") }

jacocoTestReport {
    reports {
        xml.enabled false //true - if coveralls enabled
        csv.enabled false
        html{
            enabled true
            destination "${buildDir}/reports/jacoco"
        }
    }
    executionData(test, integrationTest)
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['com/weirddev/testme/intellij/ui/**'])
        })
    }
}

dependencies {
    testCompile 'junit:junit:4.12'
    testCompile("org.spockframework:spock-core:$spockVersion"){
        exclude group: 'org.codehaus.groovy'
    }
}
