import org.jetbrains.intellij.platform.gradle.TestFrameworkType

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'org.jetbrains.intellij.platform'


def enableIdeaGroovyPlugin = Boolean.valueOf(enableIdeaGroovyPlugin)
def enableIdeaScalaPlugin = Boolean.valueOf(enableIdeaScalaPlugin)
def spockVersion = "1.0-groovy-2.4"
repositories {
    mavenCentral()
    intellijPlatform {
        defaultRepositories()
    }
}


testSets {
    integrationTest
}


def shouldInstrumentCode = !Boolean.valueOf(System.getProperty('skipCodeInstrumentation', 'false'))
intellijPlatform {
    projectName = 'TestMe'
    instrumentCode = shouldInstrumentCode
    pluginConfiguration {
        id = group
        name = 'TestMe'
        version = testMeVersion
        description = 'Test plugin!'
        ideaVersion {
            sinceBuild = '241'
            untilBuild = '242.*'
        }
    }
    publishing {
        token = System.getenv("ORG_GRADLE_PROJECT_intellijPublishToken")
        channels = [ideaPublishChannel]
    }

}

def enabledBundlePlugins = ['com.intellij.java']
if (enableIdeaGroovyPlugin) {
    enabledBundlePlugins += 'org.intellij.groovy'
}
// junit,properties plugin not found?
def unBundledPlugins = []
if (enableIdeaScalaPlugin) {
    unBundledPlugins += ('org.intellij.scala:' + scalaPluginVersion)
}
dependencies {
    intellijPlatform {
        intellijIdeaCommunity '2024.2.0.1'
        bundledPlugins enabledBundlePlugins
        plugin 'org.intellij.scala:' + scalaPluginVersion
        pluginVerifier()
        zipSigner()
        instrumentationTools()
        testFramework TestFrameworkType.Plugin.Java.INSTANCE
    }

    testImplementation 'junit:junit:4.13.2'
    implementation(project(':testme-intellij-common')) {
        exclude group: 'com.jetbrains', module: 'ideaIC'
        exclude group: 'org.jetbrains.plugins', module: 'junit'
        exclude group: 'org.jetbrains.plugins', module: 'properties'
        exclude group: 'org.jetbrains.plugins', module: 'Groovy'
    }
    implementation(project(':testme-intellij-groovy')) {
        exclude group: 'com.jetbrains', module: 'ideaIC'
        exclude group: 'org.jetbrains.plugins', module: 'junit'
        exclude group: 'org.jetbrains.plugins', module: 'properties'
        exclude group: 'org.jetbrains.plugins', module: 'Groovy'
    }
    implementation(project(':testme-intellij-scala')) {
        exclude group: 'com.jetbrains', module: 'ideaIC'
        exclude group: 'org.jetbrains.plugins', module: 'junit'
        exclude group: 'org.jetbrains.plugins', module: 'properties'
        exclude group: 'org.jetbrains.plugins', module: 'Groovy'
        exclude group: 'org.jetbrains.plugins', module: 'Scala'
    }

    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

    testImplementation 'org.mockito:mockito-core:4.3.1'
    testImplementation("org.spockframework:spock-core:$spockVersion") {
//        exclude group: 'org.codehaus.groovy'
    }
    testImplementation 'org.opentest4j:opentest4j:1.3.0'
    testCompileOnly group: 'org.scala-lang', name: 'scala-library', version: '2.11.12'


}

