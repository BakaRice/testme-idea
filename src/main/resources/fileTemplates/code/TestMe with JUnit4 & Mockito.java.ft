#parse("TestMe macros.java")
#if($PACKAGE_NAME)
package ${PACKAGE_NAME};
#end

#renderJavaTestClassImports($TESTED_CLASS_FIELDS,$TESTED_CLASS_METHODS,$PACKAGE_NAME)
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

#parse("File Header.java")
public class ${CLASS_NAME} {
#renderMockedFields($TESTED_CLASS_FIELDS)
#if(!$TESTED_CLASS_FIELDS.isEmpty())
    @InjectMocks
    private $TESTED_CLASS_NAME $StringUtils.deCapitalizeFirstLetter($TESTED_CLASS_NAME);
#else
    private ${TESTED_CLASS_NAME} $StringUtils.deCapitalizeFirstLetter($TESTED_CLASS_NAME)=new ${TESTED_CLASS_NAME}();
#end

#if(!$TESTED_CLASS_FIELDS.isEmpty())
    @Before
    public void setUp() {
        MockitoAnnotations.initMocks(this);
    }
#end
#renderTestMethods($TESTED_CLASS_METHODS, $TESTED_CLASS_NAME)
}

#parse("TestMe Footer.java")