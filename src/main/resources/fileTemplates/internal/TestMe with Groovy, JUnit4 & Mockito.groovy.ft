#parse("TestMe macros.groovy")
#set($hasMocks=$MockitoUtils.hasMockable($TESTED_CLASS.fields))
#if($PACKAGE_NAME)
package ${PACKAGE_NAME}
#end

import org.junit.Test
#if($hasMocks)
import org.junit.Before
import org.mockito.InjectMocks
import org.mockito.Mock
import org.mockito.MockitoAnnotations
//import static org.mockito.Mockito.*
#end

#parse("File Header.java")
class ${CLASS_NAME} {
#grRenderMockedFields($TESTED_CLASS.fields)
#grRenderTestSubjectInit($TESTED_CLASS,$TestSubjectUtils.hasTestableInstanceMethod($TESTED_CLASS.methods),$hasMocks)
#if($hasMocks)

    @Before
    void setUp() {
        MockitoAnnotations.initMocks(this)
    }
#end
#foreach($method in $TESTED_CLASS.methods)
#if($method.isTestable())

    @Test
    void #renderTestMethodName($method.name)() {
        #grRenderMockedReturnedValues($method,$TESTED_CLASS.fields)
        #grRenderMethodCall($method,$TESTED_CLASS.name)
#if($method.returnType && $method.returnType.name !="void")        assert #grRenderAssert($method)#end
    }
#end
#end
}

#parse("TestMe Footer.java")